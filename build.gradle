/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'nawal' at '8/11/16 12:58 PM' with Gradle 3.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.1/userguide/tutorial_java_projects.html
 */

apply from: file("${rootDir}/gradle/quality.gradle")
apply from: file("${rootDir}/gradle/app.gradle")
// use gradlew -Penv=${env} to pass
def environment = hasProperty('env') ? env : null

// Apply the java plugin to add support for Java
apply plugin: 'java'
//apply plugin: 'application'
apply plugin: 'eclipse'


sourceCompatibility = 1.8
group = 'com.games24x7'
version = '1.0.0'
// def dropwizardVersion = '1.0.0'
project.ext {
	configPath = "$rootProject.projectDir"
    dropwizardVersion = '1.0.0'
}

sourceSets {
  test {
    resources {
      srcDir "test"
    }
  }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    //jcenter()
    mavenLocal()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21',
        "io.dropwizard:dropwizard-core:${dropwizardVersion}",
    	"io.dropwizard:dropwizard-testing:${dropwizardVersion}",
    	"io.dropwizard:dropwizard-auth:${dropwizardVersion}",
    	"io.dropwizard:dropwizard-client:${dropwizardVersion}",
    	"mysql:mysql-connector-java:5.1.32",
    	"com.google.code.gson:gson:2.3.1",
    	"io.dropwizard:dropwizard-jdbi:${dropwizardVersion}",
    	"org.apache.activemq:activemq-client:5.9.0",
    	"org.apache.activemq:activemq-pool:5.14.0",
    	//"com.hubspot.dropwizard:dropwizard-guice:1.0.0"
    	"com.google.inject:guice:4.1.0",
    	//compile group: 'org.antlr', name: 'stringtemplate', version: '4.0.2'
    	"org.antlr:stringtemplate:3.2.1"
    	
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12',
    'com.h2database:h2:1.4.192'
}

mainClassName = "com.games24x7.paymentservice.Entry"

run {
	if (environment != null) {
	 configPath = "${rootProject.projectDir}/conf/${environment}"
	}
    args 'server', configPath + '/config.yml'
}
